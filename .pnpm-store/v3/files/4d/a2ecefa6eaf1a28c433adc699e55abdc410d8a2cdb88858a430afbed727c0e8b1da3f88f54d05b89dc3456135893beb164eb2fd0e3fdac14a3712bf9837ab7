{"version":3,"file":"index.development.js","sources":["../../../autocomplete-shared/dist/esm/generateAutocompleteId.js","../../../autocomplete-shared/dist/esm/getItemsCount.js","../../../autocomplete-shared/dist/esm/invariant.js","../../../autocomplete-shared/dist/esm/warn.js","../../src/checkOptions.ts","../../src/createStore.ts","../../src/utils/flatten.ts","../../src/utils/getNextActiveItemId.ts","../../src/utils/noop.ts","../../src/utils/getNormalizedSources.ts","../../src/utils/getActiveItem.ts","../../src/utils/isOrContainsNode.ts","../../src/utils/mapToAlgoliaResponse.ts","../../src/getAutocompleteSetters.ts","../../src/getDefaultProps.ts","../../src/resolve.ts","../../src/onInput.ts","../../src/onKeyDown.ts","../../src/getPropGetters.ts","../../src/getCompletion.ts","../../src/stateReducer.ts","../../src/createAutocomplete.ts","../../src/version.ts"],"sourcesContent":["var autocompleteId = 0;\nexport function generateAutocompleteId() {\n  return \"autocomplete-\".concat(autocompleteId++);\n}","export function getItemsCount(state) {\n  if (state.collections.length === 0) {\n    return 0;\n  }\n\n  return state.collections.reduce(function (sum, collection) {\n    return sum + collection.items.length;\n  }, 0);\n}","/**\n * Throws an error if the condition is not met in development mode.\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (!condition) {\n    throw new Error(\"[Autocomplete] \".concat(message));\n  }\n}","export var warnCache = {\n  current: {}\n};\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\n\nexport function warn(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (condition) {\n    return;\n  }\n\n  var sanitizedMessage = message.trim();\n  var hasAlreadyPrinted = warnCache.current[sanitizedMessage];\n\n  if (!hasAlreadyPrinted) {\n    warnCache.current[sanitizedMessage] = true; // eslint-disable-next-line no-console\n\n    console.warn(\"[Autocomplete] \".concat(sanitizedMessage));\n  }\n}","import { warn } from '@algolia/autocomplete-shared';\n\nimport { AutocompleteOptions, BaseItem } from './types';\n\nexport function checkOptions<TItem extends BaseItem>(\n  options: AutocompleteOptions<TItem>\n) {\n  warn(\n    !options.debug,\n    'The `debug` option is meant for development debugging and should not be used in production.'\n  );\n}\n","import {\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n  Reducer,\n} from './types';\n\ntype OnStoreStateChange<TItem extends BaseItem> = ({\n  prevState,\n  state,\n}: {\n  prevState: AutocompleteState<TItem>;\n  state: AutocompleteState<TItem>;\n}) => void;\n\nexport function createStore<TItem extends BaseItem>(\n  reducer: Reducer,\n  props: InternalAutocompleteOptions<TItem>,\n  onStoreStateChange: OnStoreStateChange<TItem>\n): AutocompleteStore<TItem> {\n  let state = props.initialState;\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action, payload) {\n      const prevState = { ...state };\n      state = reducer(state, {\n        type: action,\n        props,\n        payload,\n      });\n\n      onStoreStateChange({ state, prevState });\n    },\n  };\n}\n","export function flatten<TType>(values: Array<TType | TType[]>): TType[] {\n  return values.reduce<TType[]>((a, b) => {\n    return a.concat(b);\n  }, []);\n}\n","/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */\nexport function getNextActiveItemId(\n  moveAmount: number,\n  baseIndex: number | null,\n  itemCount: number,\n  defaultActiveItemId: number | null\n): number | null {\n  if (!itemCount) {\n    return null;\n  }\n\n  if (\n    moveAmount < 0 &&\n    (baseIndex === null || (defaultActiveItemId !== null && baseIndex === 0))\n  ) {\n    return itemCount + moveAmount;\n  }\n\n  const numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultActiveItemId === null ? null : 0;\n  }\n\n  return numericIndex;\n}\n","export const noop = () => {};\n","import { invariant } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteSource,\n  BaseItem,\n  GetSources,\n  GetSourcesParams,\n  InternalAutocompleteSource,\n  InternalGetSources,\n} from '../types';\n\nimport { noop } from './noop';\n\nexport function getNormalizedSources<TItem extends BaseItem>(\n  getSources: GetSources<TItem>,\n  params: GetSourcesParams<TItem>\n): ReturnType<InternalGetSources<TItem>> {\n  const seenSourceIds: string[] = [];\n\n  return Promise.resolve(getSources(params)).then((sources) => {\n    invariant(\n      Array.isArray(sources),\n      `The \\`getSources\\` function must return an array of sources but returned type ${JSON.stringify(\n        typeof sources\n      )}:\\n\\n${JSON.stringify(sources, null, 2)}`\n    );\n\n    return Promise.all(\n      sources\n        // We allow `undefined` and `false` sources to allow users to use\n        // `Boolean(query) && source` (=> `false`).\n        // We need to remove these values at this point.\n        .filter((maybeSource: any): maybeSource is AutocompleteSource<TItem> =>\n          Boolean(maybeSource)\n        )\n        .map((source) => {\n          invariant(\n            typeof source.sourceId === 'string',\n            'A source must provide a `sourceId` string.'\n          );\n\n          if (seenSourceIds.includes(source.sourceId)) {\n            throw new Error(\n              `[Autocomplete] The \\`sourceId\\` ${JSON.stringify(\n                source.sourceId\n              )} is not unique.`\n            );\n          }\n\n          seenSourceIds.push(source.sourceId);\n\n          const normalizedSource: InternalAutocompleteSource<TItem> = {\n            getItemInputValue({ state }) {\n              return state.query;\n            },\n            getItemUrl() {\n              return undefined;\n            },\n            onSelect({ setIsOpen }) {\n              setIsOpen(false);\n            },\n            onActive: noop,\n            ...source,\n          };\n\n          return Promise.resolve(normalizedSource);\n        })\n    );\n  });\n}\n","import { AutocompleteCollection, AutocompleteState, BaseItem } from '../types';\n\n// We don't have access to the autocomplete source when we call `onKeyDown`\n// or `onClick` because those are native browser events.\n// However, we can get the source from the suggestion index.\nfunction getCollectionFromActiveItemId<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n): AutocompleteCollection<TItem> | undefined {\n  // Given 3 sources with respectively 1, 2 and 3 suggestions: [1, 2, 3]\n  // We want to get the accumulated counts:\n  // [1, 1 + 2, 1 + 2 + 3] = [1, 3, 3 + 3] = [1, 3, 6]\n  const accumulatedCollectionsCount = state.collections\n    .map((collections) => collections.items.length)\n    .reduce<number[]>((acc, collectionsCount, index) => {\n      const previousValue = acc[index - 1] || 0;\n      const nextValue = previousValue + collectionsCount;\n\n      acc.push(nextValue);\n\n      return acc;\n    }, []);\n\n  // Based on the accumulated counts, we can infer the index of the suggestion.\n  const collectionIndex = accumulatedCollectionsCount.reduce((acc, current) => {\n    if (current <= state.activeItemId!) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n\n  return state.collections[collectionIndex];\n}\n\n/**\n * Gets the highlighted index relative to a suggestion object (not the absolute\n * highlighted index).\n *\n * Example:\n *  [['a', 'b'], ['c', 'd', 'e'], ['f']]\n *                      â†‘\n *         (absolute: 3, relative: 1)\n */\nfunction getRelativeActiveItemId<TItem extends BaseItem>({\n  state,\n  collection,\n}: {\n  state: AutocompleteState<TItem>;\n  collection: AutocompleteCollection<TItem>;\n}): number {\n  let isOffsetFound = false;\n  let counter = 0;\n  let previousItemsOffset = 0;\n\n  while (isOffsetFound === false) {\n    const currentCollection = state.collections[counter];\n\n    if (currentCollection === collection) {\n      isOffsetFound = true;\n      break;\n    }\n\n    previousItemsOffset += currentCollection.items.length;\n\n    counter++;\n  }\n\n  return state.activeItemId! - previousItemsOffset;\n}\n\nexport function getActiveItem<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n) {\n  const collection = getCollectionFromActiveItemId(state);\n\n  if (!collection) {\n    return null;\n  }\n\n  const item = collection.items[getRelativeActiveItemId({ state, collection })];\n  const source = collection.source;\n  const itemInputValue = source.getItemInputValue({ item, state });\n  const itemUrl = source.getItemUrl({ item, state });\n\n  return {\n    item,\n    itemInputValue,\n    itemUrl,\n    source,\n  };\n}\n","export function isOrContainsNode(parent: Node, child: Node) {\n  return parent === child || parent.contains(child);\n}\n","import type {\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\n\nexport function mapToAlgoliaResponse<THit>(\n  rawResults: Array<SearchResponse<THit> | SearchForFacetValuesResponse>\n) {\n  const results: Array<\n    SearchResponse<THit> | SearchForFacetValuesResponse\n  > = rawResults.map((result) => {\n    return {\n      ...result,\n      hits: (result as SearchResponse<THit>).hits?.map((hit) => {\n        // Bring support for the Insights plugin.\n        return {\n          ...hit,\n          __autocomplete_indexName: (result as SearchResponse<THit>).index,\n          __autocomplete_queryID: (result as SearchResponse<THit>).queryID,\n        };\n      }),\n    };\n  });\n\n  return {\n    results,\n    hits: results\n      .map((result) => (result as SearchResponse<THit>).hits)\n      .filter(Boolean),\n    facetHits: results\n      .map((result) =>\n        (result as SearchForFacetValuesResponse).facetHits?.map((facetHit) => {\n          // Bring support for the highlighting components.\n          return {\n            label: facetHit.value,\n            count: facetHit.count,\n            _highlightResult: {\n              label: {\n                value: facetHit.highlighted,\n              },\n            },\n          };\n        })\n      )\n      .filter(Boolean),\n  };\n}\n","import {\n  AutocompleteApi,\n  AutocompleteCollection,\n  AutocompleteStore,\n  BaseItem,\n} from './types';\nimport { flatten } from './utils';\n\ninterface GetAutocompleteSettersOptions<TItem extends BaseItem> {\n  store: AutocompleteStore<TItem>;\n}\n\nexport function getAutocompleteSetters<TItem extends BaseItem>({\n  store,\n}: GetAutocompleteSettersOptions<TItem>) {\n  const setActiveItemId: AutocompleteApi<TItem>['setActiveItemId'] = (\n    value\n  ) => {\n    store.dispatch('setActiveItemId', value);\n  };\n\n  const setQuery: AutocompleteApi<TItem>['setQuery'] = (value) => {\n    store.dispatch('setQuery', value);\n  };\n\n  const setCollections: AutocompleteApi<TItem>['setCollections'] = (\n    rawValue\n  ) => {\n    let baseItemId = 0;\n    const value = rawValue.map<AutocompleteCollection<TItem>>((collection) => ({\n      ...collection,\n      // We flatten the stored items to support calling `getAlgoliaResults`\n      // from the source itself.\n      items: flatten(collection.items as any).map((item: any) => ({\n        ...item,\n        __autocomplete_id: baseItemId++,\n      })),\n    }));\n\n    store.dispatch('setCollections', value);\n  };\n\n  const setIsOpen: AutocompleteApi<TItem>['setIsOpen'] = (value) => {\n    store.dispatch('setIsOpen', value);\n  };\n\n  const setStatus: AutocompleteApi<TItem>['setStatus'] = (value) => {\n    store.dispatch('setStatus', value);\n  };\n\n  const setContext: AutocompleteApi<TItem>['setContext'] = (value) => {\n    store.dispatch('setContext', value);\n  };\n\n  return {\n    setActiveItemId,\n    setQuery,\n    setCollections,\n    setIsOpen,\n    setStatus,\n    setContext,\n  };\n}\n","import {\n  getItemsCount,\n  generateAutocompleteId,\n} from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteSubscribers,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getNormalizedSources, flatten } from './utils';\n\nexport function getDefaultProps<TItem extends BaseItem>(\n  props: AutocompleteOptions<TItem>,\n  pluginSubscribers: AutocompleteSubscribers<TItem>\n): InternalAutocompleteOptions<TItem> {\n  /* eslint-disable no-restricted-globals */\n  const environment: AutocompleteEnvironment = (typeof window !== 'undefined'\n    ? window\n    : {}) as typeof window;\n  /* eslint-enable no-restricted-globals */\n  const plugins = props.plugins || [];\n\n  return {\n    debug: false,\n    openOnFocus: false,\n    placeholder: '',\n    autoFocus: false,\n    defaultActiveItemId: null,\n    stallThreshold: 300,\n    environment,\n    shouldPanelOpen: ({ state }) => getItemsCount(state) > 0,\n    ...props,\n    // Since `generateAutocompleteId` triggers a side effect (it increments\n    // an internal counter), we don't want to execute it if unnecessary.\n    id: props.id ?? generateAutocompleteId(),\n    plugins,\n    // The following props need to be deeply defaulted.\n    initialState: {\n      activeItemId: null,\n      query: '',\n      completion: null,\n      collections: [],\n      isOpen: false,\n      status: 'idle',\n      context: {},\n      ...props.initialState,\n    },\n    onStateChange(params) {\n      props.onStateChange?.(params);\n      plugins.forEach((x) => x.onStateChange?.(params));\n    },\n    onSubmit(params) {\n      props.onSubmit?.(params);\n      plugins.forEach((x) => x.onSubmit?.(params));\n    },\n    onReset(params) {\n      props.onReset?.(params);\n      plugins.forEach((x) => x.onReset?.(params));\n    },\n    getSources(params) {\n      return Promise.all(\n        [...plugins.map((plugin) => plugin.getSources), props.getSources]\n          .filter(Boolean)\n          .map((getSources) => getNormalizedSources(getSources!, params))\n      )\n        .then((nested) => flatten(nested))\n        .then((sources) =>\n          sources.map((source) => ({\n            ...source,\n            onSelect(params) {\n              source.onSelect(params);\n              pluginSubscribers.forEach((x) => x.onSelect?.(params));\n            },\n            onActive(params) {\n              source.onActive(params);\n              pluginSubscribers.forEach((x) => x.onActive?.(params));\n            },\n          }))\n        );\n    },\n    navigator: {\n      navigate({ itemUrl }) {\n        environment.location.assign(itemUrl);\n      },\n      navigateNewTab({ itemUrl }) {\n        const windowReference = environment.open(itemUrl, '_blank', 'noopener');\n        windowReference?.focus();\n      },\n      navigateNewWindow({ itemUrl }) {\n        environment.open(itemUrl, '_blank', 'noopener');\n      },\n      ...props.navigator,\n    },\n  };\n}\n","import type {\n  Execute,\n  ExecuteResponse,\n  RequesterDescription,\n  TransformResponse,\n} from '@algolia/autocomplete-preset-algolia';\nimport { invariant } from '@algolia/autocomplete-shared';\nimport {\n  MultipleQueriesQuery,\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\nimport type { SearchClient } from 'algoliasearch/lite';\n\nimport { BaseItem, InternalAutocompleteSource } from './types';\nimport { flatten, mapToAlgoliaResponse } from './utils';\n\nfunction isDescription<TItem extends BaseItem>(\n  item:\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n    | PackedDescription<TItem>\n): item is RequestDescriptionPreResolved<TItem> {\n  return Boolean((item as RequestDescriptionPreResolved<TItem>).execute);\n}\n\nfunction isRequesterDescription<TItem extends BaseItem>(\n  description: TItem[] | TItem[][] | RequesterDescription<TItem>\n): description is RequesterDescription<TItem> {\n  return Boolean((description as RequesterDescription<TItem>)?.execute);\n}\n\ntype PackedDescription<TItem extends BaseItem> = {\n  searchClient: SearchClient;\n  execute: Execute<TItem>;\n  items: RequestDescriptionPreResolved<TItem>['requests'];\n};\n\ntype RequestDescriptionPreResolved<TItem extends BaseItem> = Pick<\n  RequesterDescription<TItem>,\n  'execute' | 'searchClient' | 'transformResponse'\n> & {\n  requests: Array<{\n    query: MultipleQueriesQuery;\n    sourceId: string;\n    transformResponse: TransformResponse<TItem>;\n  }>;\n};\n\ntype RequestDescriptionPreResolvedCustom<TItem extends BaseItem> = {\n  items: TItem[] | TItem[][];\n  sourceId: string;\n  transformResponse?: undefined;\n};\n\nexport function preResolve<TItem extends BaseItem>(\n  itemsOrDescription: TItem[] | TItem[][] | RequesterDescription<TItem>,\n  sourceId: string\n):\n  | RequestDescriptionPreResolved<TItem>\n  | RequestDescriptionPreResolvedCustom<TItem> {\n  if (isRequesterDescription<TItem>(itemsOrDescription)) {\n    return {\n      ...itemsOrDescription,\n      requests: itemsOrDescription.queries.map((query) => ({\n        query,\n        sourceId,\n        transformResponse: itemsOrDescription.transformResponse,\n      })),\n    };\n  }\n\n  return {\n    items: itemsOrDescription,\n    sourceId,\n  };\n}\n\nexport function resolve<TItem extends BaseItem>(\n  items: Array<\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n  >\n) {\n  const packed = items.reduce<\n    Array<RequestDescriptionPreResolvedCustom<TItem> | PackedDescription<TItem>>\n  >((acc, current) => {\n    if (!isDescription(current)) {\n      acc.push(current);\n      return acc;\n    }\n\n    const { searchClient, execute, requests } = current;\n\n    const container = acc.find<PackedDescription<TItem>>(\n      (item): item is PackedDescription<TItem> => {\n        return (\n          isDescription(current) &&\n          isDescription(item) &&\n          item.searchClient === searchClient &&\n          item.execute === execute\n        );\n      }\n    );\n\n    if (container) {\n      container.items.push(...requests);\n    } else {\n      const request: PackedDescription<TItem> = {\n        execute,\n        items: requests,\n        searchClient,\n      };\n      acc.push(request);\n    }\n\n    return acc;\n  }, []);\n\n  const values = packed.map<\n    | Promise<RequestDescriptionPreResolvedCustom<TItem>>\n    | ReturnType<Execute<TItem>>\n  >((maybeDescription) => {\n    if (!isDescription<TItem>(maybeDescription)) {\n      return Promise.resolve(\n        maybeDescription as RequestDescriptionPreResolvedCustom<TItem>\n      );\n    }\n\n    const {\n      execute,\n      items,\n      searchClient,\n    } = maybeDescription as PackedDescription<TItem>;\n\n    return execute({\n      searchClient,\n      requests: items,\n    });\n  });\n\n  return Promise.all<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>\n  >(values).then((responses) =>\n    flatten<\n      RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n    >(responses)\n  );\n}\n\nexport function postResolve<TItem extends BaseItem>(\n  responses: Array<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n  >,\n  sources: Array<InternalAutocompleteSource<TItem>>\n) {\n  return sources.map((source) => {\n    const matches = responses.filter(\n      (response) => response.sourceId === source.sourceId\n    );\n    const results = matches.map(({ items }) => items);\n    const transform = matches[0].transformResponse;\n    const items = transform\n      ? transform(\n          mapToAlgoliaResponse(\n            results as Array<\n              SearchForFacetValuesResponse | SearchResponse<TItem>\n            >\n          )\n        )\n      : results;\n\n    invariant(\n      Array.isArray(items),\n      `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned type ${JSON.stringify(\n        typeof items\n      )}:\\n\\n${JSON.stringify(items, null, 2)}.\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    invariant(\n      (items as Array<typeof items>).every(Boolean),\n      `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned ${JSON.stringify(\n        undefined\n      )}.\n\nDid you forget to return items?\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    return {\n      source,\n      items,\n    };\n  });\n}\n","import { preResolve, resolve, postResolve } from './resolve';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem } from './utils';\n\nlet lastStalledId: number | null = null;\n\ninterface OnInputParams<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: any;\n  /**\n   * The next partial state to apply after the function is called.\n   *\n   * This is useful when we call `onInput` in a different scenario than an\n   * actual input. For example, we use `onInput` when we click on an item,\n   * but we want to close the panel in that case.\n   */\n  nextState?: Partial<AutocompleteState<TItem>>;\n  props: InternalAutocompleteOptions<TItem>;\n  query: string;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onInput<TItem extends BaseItem>({\n  event,\n  nextState = {},\n  props,\n  query,\n  refresh,\n  store,\n  ...setters\n}: OnInputParams<TItem>): Promise<void> {\n  if (lastStalledId) {\n    props.environment.clearTimeout(lastStalledId);\n  }\n\n  const {\n    setCollections,\n    setIsOpen,\n    setQuery,\n    setActiveItemId,\n    setStatus,\n  } = setters;\n\n  setQuery(query);\n  setActiveItemId(props.defaultActiveItemId);\n\n  if (!query && props.openOnFocus === false) {\n    setStatus('idle');\n    setCollections(\n      store.getState().collections.map((collection) => ({\n        ...collection,\n        items: [],\n      }))\n    );\n    setIsOpen(\n      nextState.isOpen ?? props.shouldPanelOpen({ state: store.getState() })\n    );\n\n    return Promise.resolve();\n  }\n\n  setStatus('loading');\n\n  lastStalledId = props.environment.setTimeout(() => {\n    setStatus('stalled');\n  }, props.stallThreshold);\n\n  return props\n    .getSources({\n      query,\n      refresh,\n      state: store.getState(),\n      ...setters,\n    })\n    .then((sources) => {\n      setStatus('loading');\n\n      return Promise.all(\n        sources.map((source) => {\n          return Promise.resolve(\n            source.getItems({\n              query,\n              refresh,\n              state: store.getState(),\n              ...setters,\n            })\n          ).then((itemsOrDescription) =>\n            preResolve<TItem>(itemsOrDescription, source.sourceId)\n          );\n        })\n      )\n        .then(resolve)\n        .then((responses) => postResolve(responses, sources))\n        .then((collections) => {\n          setStatus('idle');\n          setCollections(collections as any);\n          const isPanelOpen = props.shouldPanelOpen({\n            state: store.getState(),\n          });\n          setIsOpen(\n            nextState.isOpen ??\n              ((props.openOnFocus && !query && isPanelOpen) || isPanelOpen)\n          );\n\n          const highlightedItem = getActiveItem(store.getState());\n\n          if (store.getState().activeItemId !== null && highlightedItem) {\n            const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n            source.onActive({\n              event,\n              item,\n              itemInputValue,\n              itemUrl,\n              refresh,\n              source,\n              state: store.getState(),\n              ...setters,\n            });\n          }\n        })\n        .finally(() => {\n          if (lastStalledId) {\n            props.environment.clearTimeout(lastStalledId);\n          }\n        });\n    });\n}\n","import { onInput } from './onInput';\nimport {\n  ActionType,\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem } from './utils';\n\ninterface OnKeyDownOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: KeyboardEvent;\n  props: InternalAutocompleteOptions<TItem>;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onKeyDown<TItem extends BaseItem>({\n  event,\n  props,\n  refresh,\n  store,\n  ...setters\n}: OnKeyDownOptions<TItem>): void {\n  if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n    // eslint-disable-next-line no-inner-declarations\n    function triggerScrollIntoView() {\n      const nodeItem = props.environment.document.getElementById(\n        `${props.id}-item-${store.getState().activeItemId}`\n      );\n\n      if (nodeItem) {\n        if ((nodeItem as any).scrollIntoViewIfNeeded) {\n          (nodeItem as any).scrollIntoViewIfNeeded(false);\n        } else {\n          nodeItem.scrollIntoView(false);\n        }\n      }\n    }\n\n    // eslint-disable-next-line no-inner-declarations\n    function triggerOnActive() {\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    }\n\n    // Default browser behavior changes the caret placement on ArrowUp and\n    // ArrowDown.\n    event.preventDefault();\n\n    // When re-opening the panel, we need to split the logic to keep the actions\n    // synchronized as `onInput` returns a promise.\n    if (\n      store.getState().isOpen === false &&\n      (props.openOnFocus || Boolean(store.getState().query))\n    ) {\n      onInput({\n        event,\n        props,\n        query: store.getState().query,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        store.dispatch(event.key as ActionType, {\n          nextActiveItemId: props.defaultActiveItemId,\n        });\n\n        triggerOnActive();\n        // Since we rely on the DOM, we need to wait for all the micro tasks to\n        // finish (which include re-opening the panel) to make sure all the\n        // elements are available.\n        setTimeout(triggerScrollIntoView, 0);\n      });\n    } else {\n      store.dispatch(event.key, {});\n\n      triggerOnActive();\n      triggerScrollIntoView();\n    }\n  } else if (event.key === 'Escape') {\n    // This prevents the default browser behavior on `input[type=\"search\"]`\n    // from removing the query right away because we first want to close the\n    // panel.\n    event.preventDefault();\n\n    store.dispatch(event.key, null);\n  } else if (event.key === 'Enter') {\n    // No active item, so we let the browser handle the native `onSubmit` form\n    // event.\n    if (\n      store.getState().activeItemId === null ||\n      store\n        .getState()\n        .collections.every((collection) => collection.items.length === 0)\n    ) {\n      return;\n    }\n\n    // This prevents the `onSubmit` event to be sent because an item is\n    // highlighted.\n    event.preventDefault();\n\n    const { item, itemInputValue, itemUrl, source } = getActiveItem(\n      store.getState()\n    )!;\n\n    if (event.metaKey || event.ctrlKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewTab({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.shiftKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewWindow({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.altKey) {\n      // Keep native browser behavior\n    } else {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigate({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n\n        return;\n      }\n\n      onInput({\n        event,\n        nextState: { isOpen: false },\n        props,\n        query: itemInputValue,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      });\n    }\n  }\n}\n","import { onInput } from './onInput';\nimport { onKeyDown } from './onKeyDown';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  GetEnvironmentProps,\n  GetFormProps,\n  GetInputProps,\n  GetItemProps,\n  GetLabelProps,\n  GetListProps,\n  GetPanelProps,\n  GetRootProps,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem, isOrContainsNode } from './utils';\n\ninterface GetPropGettersOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  store: AutocompleteStore<TItem>;\n  props: InternalAutocompleteOptions<TItem>;\n}\n\nexport function getPropGetters<\n  TItem extends BaseItem,\n  TEvent,\n  TMouseEvent,\n  TKeyboardEvent\n>({ props, refresh, store, ...setters }: GetPropGettersOptions<TItem>) {\n  const getEnvironmentProps: GetEnvironmentProps = (providedProps) => {\n    const { inputElement, formElement, panelElement, ...rest } = providedProps;\n\n    return {\n      // On touch devices, we do not rely on the native `blur` event of the\n      // input to close the panel, but rather on a custom `touchstart` event\n      // outside of the autocomplete elements.\n      // This ensures a working experience on mobile because we blur the input\n      // on touch devices when the user starts scrolling (`touchmove`).\n      onTouchStart(event) {\n        if (\n          store.getState().isOpen === false ||\n          event.target === inputElement\n        ) {\n          return;\n        }\n\n        // @TODO: support cases where there are multiple Autocomplete instances.\n        // Right now, a second instance makes this computation return false.\n        const isTargetWithinAutocomplete = [formElement, panelElement].some(\n          (contextNode) => {\n            return (\n              isOrContainsNode(contextNode, event.target as Node) ||\n              isOrContainsNode(\n                contextNode,\n                props.environment.document.activeElement!\n              )\n            );\n          }\n        );\n\n        if (isTargetWithinAutocomplete === false) {\n          store.dispatch('blur', null);\n        }\n      },\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove(event: TouchEvent) {\n        if (\n          store.getState().isOpen === false ||\n          inputElement !== props.environment.document.activeElement ||\n          event.target === inputElement\n        ) {\n          return;\n        }\n\n        inputElement.blur();\n      },\n      ...rest,\n    };\n  };\n\n  const getRootProps: GetRootProps = (rest) => {\n    return {\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getFormProps: GetFormProps<TEvent> = (providedProps) => {\n    const { inputElement, ...rest } = providedProps;\n\n    return {\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: (event) => {\n        ((event as unknown) as Event).preventDefault();\n\n        props.onSubmit({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('submit', null);\n        providedProps.inputElement?.blur();\n      },\n      onReset: (event) => {\n        ((event as unknown) as Event).preventDefault();\n\n        props.onReset({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('reset', null);\n        providedProps.inputElement?.focus();\n      },\n      ...rest,\n    };\n  };\n\n  const getInputProps: GetInputProps<TEvent, TMouseEvent, TKeyboardEvent> = (\n    providedProps\n  ) => {\n    function onFocus(event: TEvent) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput({\n          event,\n          props,\n          query: store.getState().completion || store.getState().query,\n          refresh,\n          store,\n          ...setters,\n        });\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    const isTouchDevice = 'ontouchstart' in props.environment;\n    const { inputElement, maxLength = 512, ...rest } = providedProps || {};\n    const activeItem = getActiveItem(store.getState());\n\n    return {\n      'aria-autocomplete': 'both',\n      'aria-activedescendant':\n        store.getState().isOpen && store.getState().activeItemId !== null\n          ? `${props.id}-item-${store.getState().activeItemId}`\n          : undefined,\n      'aria-controls': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      value: store.getState().completion || store.getState().query,\n      id: `${props.id}-input`,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: activeItem?.itemUrl ? 'go' : 'search',\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength,\n      type: 'search',\n      onChange: (event) => {\n        onInput({\n          event,\n          props,\n          query: (((event as unknown) as Event)\n            .currentTarget as HTMLInputElement).value.slice(0, maxLength),\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onKeyDown: (event) => {\n        onKeyDown({\n          event: (event as unknown) as KeyboardEvent,\n          props,\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onFocus,\n      onBlur: () => {\n        // We do rely on the `blur` event on touch devices.\n        // See explanation in `onTouchStart`.\n        if (!isTouchDevice) {\n          store.dispatch('blur', null);\n        }\n      },\n      onClick: (event) => {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (\n          providedProps.inputElement ===\n            props.environment.document.activeElement &&\n          !store.getState().isOpen\n        ) {\n          onFocus((event as unknown) as TEvent);\n        }\n      },\n      ...rest,\n    };\n  };\n\n  const getLabelProps: GetLabelProps = (rest) => {\n    return {\n      htmlFor: `${props.id}-input`,\n      id: `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getListProps: GetListProps = (rest) => {\n    return {\n      role: 'listbox',\n      'aria-labelledby': `${props.id}-label`,\n      id: `${props.id}-list`,\n      ...rest,\n    };\n  };\n\n  const getPanelProps: GetPanelProps<TMouseEvent> = (rest) => {\n    return {\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        ((event as unknown) as MouseEvent).preventDefault();\n      },\n      onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      },\n      ...rest,\n    };\n  };\n\n  const getItemProps: GetItemProps<any, TMouseEvent> = (providedProps) => {\n    const { item, source, ...rest } = providedProps;\n\n    return {\n      id: `${props.id}-item-${item.__autocomplete_id}`,\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n\n        const activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          const { item, itemInputValue, itemUrl, source } = activeItem;\n\n          source.onActive({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        }\n      },\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        ((event as unknown) as MouseEvent).preventDefault();\n      },\n      onClick(event) {\n        const itemInputValue = source.getItemInputValue({\n          item,\n          state: store.getState(),\n        });\n        const itemUrl = source.getItemUrl({\n          item,\n          state: store.getState(),\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        const runPreCommand = itemUrl\n          ? Promise.resolve()\n          : onInput({\n              event,\n              nextState: { isOpen: false },\n              props,\n              query: itemInputValue,\n              refresh,\n              store,\n              ...setters,\n            });\n\n        runPreCommand.then(() => {\n          source.onSelect({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        });\n      },\n      ...rest,\n    };\n  };\n\n  return {\n    getEnvironmentProps,\n    getRootProps,\n    getFormProps,\n    getLabelProps,\n    getInputProps,\n    getPanelProps,\n    getListProps,\n    getItemProps,\n  };\n}\n","import { AutocompleteState, BaseItem } from './types';\nimport { getActiveItem } from './utils';\n\ninterface GetCompletionProps<TItem extends BaseItem> {\n  state: AutocompleteState<TItem>;\n}\n\nexport function getCompletion<TItem extends BaseItem>({\n  state,\n}: GetCompletionProps<TItem>): string | null {\n  if (state.isOpen === false || state.activeItemId === null) {\n    return null;\n  }\n\n  return getActiveItem(state)?.itemInputValue || null;\n}\n","import { getItemsCount, invariant } from '@algolia/autocomplete-shared';\n\nimport { getCompletion } from './getCompletion';\nimport { Reducer } from './types';\nimport { getNextActiveItemId } from './utils';\n\nexport const stateReducer: Reducer = (state, action) => {\n  switch (action.type) {\n    case 'setActiveItemId': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'setQuery': {\n      return {\n        ...state,\n        query: action.payload,\n        completion: null,\n      };\n    }\n\n    case 'setCollections': {\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    }\n\n    case 'setIsOpen': {\n      return {\n        ...state,\n        isOpen: action.payload,\n      };\n    }\n\n    case 'setStatus': {\n      return {\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    case 'setContext': {\n      return {\n        ...state,\n        context: {\n          ...state.context,\n          ...action.payload,\n        },\n      };\n    }\n\n    case 'ArrowDown': {\n      const nextState = {\n        ...state,\n        activeItemId: action.payload.hasOwnProperty('nextActiveItemId')\n          ? action.payload.nextActiveItemId\n          : getNextActiveItemId(\n              1,\n              state.activeItemId,\n              getItemsCount(state),\n              action.props.defaultActiveItemId\n            ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'ArrowUp': {\n      const nextState = {\n        ...state,\n        activeItemId: getNextActiveItemId(\n          -1,\n          state.activeItemId,\n          getItemsCount(state),\n          action.props.defaultActiveItemId\n        ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'Escape': {\n      if (state.isOpen) {\n        return {\n          ...state,\n          activeItemId: null,\n          isOpen: false,\n          completion: null,\n        };\n      }\n\n      return {\n        ...state,\n        activeItemId: null,\n        query: '',\n        status: 'idle',\n        collections: [],\n      };\n    }\n\n    case 'submit': {\n      return {\n        ...state,\n        activeItemId: null,\n        isOpen: false,\n        status: 'idle',\n      };\n    }\n\n    case 'reset': {\n      return {\n        ...state,\n        activeItemId:\n          // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true\n            ? action.props.defaultActiveItemId\n            : null,\n        status: 'idle',\n        query: '',\n      };\n    }\n\n    case 'focus': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n        isOpen:\n          (action.props.openOnFocus || Boolean(state.query)) &&\n          action.props.shouldPanelOpen({ state }),\n      };\n    }\n\n    case 'blur': {\n      if (action.props.debug) {\n        return state;\n      }\n\n      return {\n        ...state,\n        isOpen: false,\n        activeItemId: null,\n      };\n    }\n\n    case 'mousemove': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'mouseleave': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n      };\n    }\n\n    default:\n      invariant(\n        false,\n        `The reducer action ${JSON.stringify(action.type)} is not supported.`\n      );\n\n      return state;\n  }\n};\n","import { checkOptions } from './checkOptions';\nimport { createStore } from './createStore';\nimport { getAutocompleteSetters } from './getAutocompleteSetters';\nimport { getDefaultProps } from './getDefaultProps';\nimport { getPropGetters } from './getPropGetters';\nimport { onInput } from './onInput';\nimport { stateReducer } from './stateReducer';\nimport {\n  AutocompleteApi,\n  AutocompleteOptions,\n  BaseItem,\n  AutocompleteSubscribers,\n} from './types';\n\nexport function createAutocomplete<\n  TItem extends BaseItem,\n  TEvent = Event,\n  TMouseEvent = MouseEvent,\n  TKeyboardEvent = KeyboardEvent\n>(\n  options: AutocompleteOptions<TItem>\n): AutocompleteApi<TItem, TEvent, TMouseEvent, TKeyboardEvent> {\n  checkOptions(options);\n\n  const subscribers: AutocompleteSubscribers<TItem> = [];\n  const props = getDefaultProps(options, subscribers);\n  const store = createStore(stateReducer, props, onStoreStateChange);\n\n  const setters = getAutocompleteSetters({ store });\n  const propGetters = getPropGetters<\n    TItem,\n    TEvent,\n    TMouseEvent,\n    TKeyboardEvent\n  >({ props, refresh, store, ...setters });\n\n  function onStoreStateChange({ prevState, state }) {\n    props.onStateChange({ prevState, state, refresh, ...setters });\n  }\n\n  function refresh() {\n    return onInput({\n      event: new Event('input'),\n      nextState: { isOpen: store.getState().isOpen },\n      props,\n      query: store.getState().query,\n      refresh,\n      store,\n      ...setters,\n    });\n  }\n\n  props.plugins.forEach((plugin) =>\n    plugin.subscribe?.({\n      ...setters,\n      refresh,\n      onSelect(fn) {\n        subscribers.push({ onSelect: fn });\n      },\n      onActive(fn) {\n        subscribers.push({ onActive: fn });\n      },\n    })\n  );\n\n  return {\n    refresh,\n    ...propGetters,\n    ...setters,\n  };\n}\n","export const version = '1.2.2';\n"],"names":["autocompleteId","generateAutocompleteId","concat","getItemsCount","state","collections","length","reduce","sum","collection","items","invariant","condition","message","Error","warnCache","current","warn","sanitizedMessage","trim","hasAlreadyPrinted","console","checkOptions","options","process","debug","createStore","reducer","props","onStoreStateChange","initialState","getState","dispatch","action","payload","prevState","type","flatten","values","a","b","getNextActiveItemId","moveAmount","baseIndex","itemCount","defaultActiveItemId","numericIndex","noop","getNormalizedSources","getSources","params","seenSourceIds","Promise","resolve","then","sources","Array","isArray","JSON","stringify","all","filter","maybeSource","Boolean","map","source","sourceId","includes","push","normalizedSource","getItemInputValue","query","getItemUrl","undefined","onSelect","setIsOpen","onActive","getCollectionFromActiveItemId","accumulatedCollectionsCount","acc","collectionsCount","index","previousValue","nextValue","collectionIndex","activeItemId","getRelativeActiveItemId","isOffsetFound","counter","previousItemsOffset","currentCollection","getActiveItem","item","itemInputValue","itemUrl","isOrContainsNode","parent","child","contains","mapToAlgoliaResponse","rawResults","results","result","hits","hit","__autocomplete_indexName","__autocomplete_queryID","queryID","facetHits","facetHit","label","value","count","_highlightResult","highlighted","getAutocompleteSetters","store","setActiveItemId","setQuery","setCollections","rawValue","baseItemId","__autocomplete_id","setStatus","setContext","getDefaultProps","pluginSubscribers","environment","window","plugins","openOnFocus","placeholder","autoFocus","stallThreshold","shouldPanelOpen","id","completion","isOpen","status","context","onStateChange","forEach","x","onSubmit","onReset","plugin","nested","navigator","navigate","location","assign","navigateNewTab","windowReference","open","focus","navigateNewWindow","isDescription","execute","isRequesterDescription","description","preResolve","itemsOrDescription","requests","queries","transformResponse","packed","searchClient","container","find","request","maybeDescription","responses","postResolve","matches","response","transform","every","lastStalledId","onInput","event","nextState","refresh","setters","clearTimeout","setTimeout","getItems","isPanelOpen","highlightedItem","finally","onKeyDown","key","triggerScrollIntoView","nodeItem","document","getElementById","scrollIntoViewIfNeeded","scrollIntoView","triggerOnActive","preventDefault","nextActiveItemId","metaKey","ctrlKey","shiftKey","altKey","getPropGetters","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","rest","onTouchStart","target","isTargetWithinAutocomplete","some","contextNode","activeElement","onTouchMove","blur","getRootProps","role","getFormProps","noValidate","getInputProps","onFocus","isTouchDevice","maxLength","activeItem","autoComplete","autoCorrect","autoCapitalize","enterKeyHint","spellCheck","onChange","currentTarget","slice","onBlur","onClick","getLabelProps","htmlFor","getListProps","getPanelProps","onMouseDown","onMouseLeave","getItemProps","onMouseMove","runPreCommand","getCompletion","stateReducer","hasOwnProperty","createAutocomplete","subscribers","propGetters","Event","subscribe","fn","version"],"mappings":"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"}