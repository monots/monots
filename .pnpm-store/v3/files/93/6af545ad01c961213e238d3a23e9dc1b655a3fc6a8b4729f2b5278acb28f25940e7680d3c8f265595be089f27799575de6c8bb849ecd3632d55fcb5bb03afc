"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DocItemFooter;

var _react = _interopRequireDefault(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _LastUpdated = _interopRequireDefault(require("@theme/LastUpdated"));

var _EditThisPage = _interopRequireDefault(require("@theme/EditThisPage"));

var _TagsListInline = _interopRequireDefault(require("@theme/TagsListInline"));

var _stylesModule = _interopRequireDefault(require("./styles.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function TagsRow(props) {
  return <div className="row margin-bottom--sm">
      <div className="col">
        <_TagsListInline.default {...props} />
      </div>
    </div>;
}

function EditMetaRow({
  editUrl,
  lastUpdatedAt,
  lastUpdatedBy,
  formattedLastUpdatedAt
}) {
  return <div className="row">
      <div className="col">{editUrl && <_EditThisPage.default editUrl={editUrl} />}</div>

      <div className={(0, _clsx.default)('col', _stylesModule.default.lastUpdated)}>
        {(lastUpdatedAt || lastUpdatedBy) && <_LastUpdated.default lastUpdatedAt={lastUpdatedAt} formattedLastUpdatedAt={formattedLastUpdatedAt} lastUpdatedBy={lastUpdatedBy} />}
      </div>
    </div>;
}

function DocItemFooter(props) {
  const {
    content: DocContent
  } = props;
  const {
    metadata
  } = DocContent;
  const {
    editUrl,
    lastUpdatedAt,
    formattedLastUpdatedAt,
    lastUpdatedBy,
    tags
  } = metadata;
  const canDisplayTagsRow = tags.length > 0;
  const canDisplayEditMetaRow = !!(editUrl || lastUpdatedAt || lastUpdatedBy);
  const canDisplayFooter = canDisplayTagsRow || canDisplayEditMetaRow;

  if (!canDisplayFooter) {
    return <></>;
  }

  return <footer className="docusaurus-mt-lg">
      {canDisplayTagsRow && <TagsRow tags={tags} />}
      {canDisplayEditMetaRow && <EditMetaRow editUrl={editUrl} lastUpdatedAt={lastUpdatedAt} lastUpdatedBy={lastUpdatedBy} formattedLastUpdatedAt={formattedLastUpdatedAt} />}
    </footer>;
}